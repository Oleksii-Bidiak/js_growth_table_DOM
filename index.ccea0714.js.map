{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,OAAO,gBAAgB,CAAC,mBAExB,WACE,IAAM,EAAY,SAAS,aAAa,CAAC,cACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAQ,SAAS,aAAa,CAAC,UAC/B,EAAQ,EAAM,OAAO,CAAC,EAAE,CA2D9B,EAAU,gBAAgB,CAAC,QAzDG,SAAC,CAA/B,EACE,IAAM,EAAS,EAAE,MAAM,CACjB,EAAO,EAAM,OAAO,CAAC,EAAE,CAAC,IAAI,CAE9B,EAAO,QAAQ,CAAC,IAAc,EAAK,MAAM,CAAG,KAC1B,IAAhB,EAAK,MAAM,EACb,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,EAIA,EAAM,MAAM,CAAC,CAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,IAEX,KAAhB,EAAK,MAAM,EACb,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,GAKE,EAAO,QAAQ,CAAC,IAAc,EAAK,MAAM,CAAG,IAC1B,KAAhB,EAAK,MAAM,EACb,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,EAIA,CAAI,CAAC,EAAE,CAAC,MAAM,GAEM,IAAhB,EAAK,MAAM,EACb,CAAA,EAAU,QAAQ,CAAG,CAAA,CADvB,GAKE,EAAO,QAAQ,CAAC,IAAiB,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAG,KAC7B,IAA5B,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EACzB,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,EAIC,EAAG,GAAM,OAAO,CAAC,SAAC,CAAlB,EACC,EAAI,MAAM,CAAC,EAAI,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,GACvC,GAEgC,KAA5B,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EACzB,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,GAKE,EAAO,QAAQ,CAAC,IAAiB,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAG,IAC7B,KAA5B,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EACzB,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,EAIC,EAAG,GAAM,OAAO,CAAC,SAAC,CAAlB,EACC,EAAI,QAAQ,CAAC,EAAE,CAAC,MAAM,EACxB,GAEgC,IAA5B,CAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EACzB,CAAA,EAAa,QAAQ,CAAG,CAAA,CAD1B,EAIJ,EAGF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nwindow.addEventListener(\"DOMContentLoaded\", app);\nfunction app() {\n    var container = document.querySelector(\".container\");\n    var appendRow = document.querySelector(\".append-row\");\n    var removeRow = document.querySelector(\".remove-row\");\n    var appendColumn = document.querySelector(\".append-column\");\n    var removeColumn = document.querySelector(\".remove-column\");\n    var table = document.querySelector(\".field\");\n    var tBody = table.tBodies[0];\n    var clickHandlerAppendRow = function(e) {\n        var target = e.target;\n        var rows = table.tBodies[0].rows;\n        if (target.contains(appendRow) && rows.length < 10) {\n            if (rows.length === 2) removeRow.disabled = false;\n            tBody.append(rows[0].cloneNode(true));\n            if (rows.length === 10) appendRow.disabled = true;\n        }\n        if (target.contains(removeRow) && rows.length > 2) {\n            if (rows.length === 10) appendRow.disabled = false;\n            rows[0].remove();\n            if (rows.length === 2) removeRow.disabled = true;\n        }\n        if (target.contains(appendColumn) && rows[0].children.length < 10) {\n            if (rows[0].children.length === 2) removeColumn.disabled = false;\n            _to_consumable_array(rows).forEach(function(row) {\n                row.append(row.children[0].cloneNode(true));\n            });\n            if (rows[0].children.length === 10) appendColumn.disabled = true;\n        }\n        if (target.contains(removeColumn) && rows[0].children.length > 2) {\n            if (rows[0].children.length === 10) appendColumn.disabled = false;\n            _to_consumable_array(rows).forEach(function(row) {\n                row.children[0].remove();\n            });\n            if (rows[0].children.length === 2) removeColumn.disabled = true;\n        }\n    };\n    container.addEventListener(\"click\", clickHandlerAppendRow);\n}\n\n//# sourceMappingURL=index.ccea0714.js.map\n","'use strict';\n\nwindow.addEventListener('DOMContentLoaded', app);\n\nfunction app() {\n  const container = document.querySelector('.container');\n  const appendRow = document.querySelector('.append-row');\n  const removeRow = document.querySelector('.remove-row');\n  const appendColumn = document.querySelector('.append-column');\n  const removeColumn = document.querySelector('.remove-column');\n  const table = document.querySelector('.field');\n  const tBody = table.tBodies[0];\n\n  const clickHandlerAppendRow = (e) => {\n    const target = e.target;\n    const rows = table.tBodies[0].rows;\n\n    if (target.contains(appendRow) && rows.length < 10) {\n      if (rows.length === 2) {\n        removeRow.disabled = false;\n      }\n\n      tBody.append(rows[0].cloneNode(true));\n\n      if (rows.length === 10) {\n        appendRow.disabled = true;\n      }\n    }\n\n    if (target.contains(removeRow) && rows.length > 2) {\n      if (rows.length === 10) {\n        appendRow.disabled = false;\n      }\n\n      rows[0].remove();\n\n      if (rows.length === 2) {\n        removeRow.disabled = true;\n      }\n    }\n\n    if (target.contains(appendColumn) && rows[0].children.length < 10) {\n      if (rows[0].children.length === 2) {\n        removeColumn.disabled = false;\n      }\n\n      [...rows].forEach((row) => {\n        row.append(row.children[0].cloneNode(true));\n      });\n\n      if (rows[0].children.length === 10) {\n        appendColumn.disabled = true;\n      }\n    }\n\n    if (target.contains(removeColumn) && rows[0].children.length > 2) {\n      if (rows[0].children.length === 10) {\n        appendColumn.disabled = false;\n      }\n\n      [...rows].forEach((row) => {\n        row.children[0].remove();\n      });\n\n      if (rows[0].children.length === 2) {\n        removeColumn.disabled = true;\n      }\n    }\n  };\n\n  container.addEventListener('click', clickHandlerAppendRow);\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","window","addEventListener","container","document","querySelector","appendRow","removeRow","appendColumn","removeColumn","table","tBody","tBodies","e","target","rows","contains","disabled","append","cloneNode","remove","children","forEach","row"],"version":3,"file":"index.ccea0714.js.map"}